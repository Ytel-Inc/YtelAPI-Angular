/**
 * YtelAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Body33
 *
 * @constructor
 */
angular.module('YtelAPILib')
    .factory('Body33', ['BaseModel', Body33Model]);

    function Body33Model(BaseModel) {
        var Body33 = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.offset = this.getValue(obj.offset);
            this.limit = this.getValue(obj.limit);
        };

        Body33.prototype = new BaseModel();
        Body33.prototype.constructor = Body33;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Body33.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'offset', realName: 'Offset' },
                { name: 'limit', realName: 'Limit' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Body33.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * The starting point of the list of blocked emails that should be returned.
         *
         * @return {string|null}
         */
        Body33.prototype.getOffset = function () {
            return this.offset;
        };
    
        /**
         * Setter for Offset
         * 
         * @param {string|null} value 
         */
        Body33.prototype.setOffset = function (value) {
            this.offset = value;
        };
    
        /**
         * The count of results that should be returned.
         *
         * @return {string|null}
         */
        Body33.prototype.getLimit = function () {
            return this.limit;
        };
    
        /**
         * Setter for Limit
         * 
         * @param {string|null} value 
         */
        Body33.prototype.setLimit = function (value) {
            this.limit = value;
        };
    
        return Body33;
    }

}(angular));
