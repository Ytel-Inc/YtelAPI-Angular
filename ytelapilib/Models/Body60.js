/**
 * YtelAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Body60
 *
 * @constructor
 */
angular.module('YtelAPILib')
    .factory('Body60', ['BaseModel', Body60Model]);

    function Body60Model(BaseModel) {
        var Body60 = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.page = this.getValue(obj.page);
            this.pagesize = this.getValue(obj.pagesize);
            this.keyword = this.getValue(obj.keyword);
            this.shortcode = this.getValue(obj.shortcode);
        };

        Body60.prototype = new BaseModel();
        Body60.prototype.constructor = Body60;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Body60.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'page', realName: 'page' },
                { name: 'pagesize', realName: 'pagesize' },
                { name: 'keyword', realName: 'Keyword' },
                { name: 'shortcode', realName: 'Shortcode' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Body60.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * The page count to retrieve from the total results in the collection. Page indexing starts at 1.
         *
         * @return {int|null}
         */
        Body60.prototype.getPage = function () {
            return this.page;
        };
    
        /**
         * Setter for Page
         * 
         * @param {int|null} value 
         */
        Body60.prototype.setPage = function (value) {
            this.page = value;
        };
    
        /**
         * Number of individual resources listed in the response per page
         *
         * @return {int|null}
         */
        Body60.prototype.getPagesize = function () {
            return this.pagesize;
        };
    
        /**
         * Setter for Pagesize
         * 
         * @param {int|null} value 
         */
        Body60.prototype.setPagesize = function (value) {
            this.pagesize = value;
        };
    
        /**
         * Only list keywords of keyword
         *
         * @return {string|null}
         */
        Body60.prototype.getKeyword = function () {
            return this.keyword;
        };
    
        /**
         * Setter for Keyword
         * 
         * @param {string|null} value 
         */
        Body60.prototype.setKeyword = function (value) {
            this.keyword = value;
        };
    
        /**
         * Only list keywords of shortcode
         *
         * @return {int|null}
         */
        Body60.prototype.getShortcode = function () {
            return this.shortcode;
        };
    
        /**
         * Setter for Shortcode
         * 
         * @param {int|null} value 
         */
        Body60.prototype.setShortcode = function (value) {
            this.shortcode = value;
        };
    
        return Body60;
    }

}(angular));
