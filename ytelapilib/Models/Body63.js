/**
 * YtelAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Body63
 *
 * @constructor
 */
angular.module('YtelAPILib')
    .factory('Body63', ['BaseModel', Body63Model]);

    function Body63Model(BaseModel) {
        var Body63 = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.shortcode = this.getValue(obj.shortcode);
            this.friendlyName = this.getValue(obj.friendlyName);
            this.callbackUrl = this.getValue(obj.callbackUrl);
            this.callbackMethod = this.getValue(obj.callbackMethod);
            this.fallbackUrl = this.getValue(obj.fallbackUrl);
            this.fallbackUrlMethod = this.getValue(obj.fallbackUrlMethod);
        };

        Body63.prototype = new BaseModel();
        Body63.prototype.constructor = Body63;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Body63.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'shortcode', realName: 'Shortcode' },
                { name: 'friendlyName', realName: 'FriendlyName' },
                { name: 'callbackUrl', realName: 'CallbackUrl' },
                { name: 'callbackMethod', realName: 'CallbackMethod' },
                { name: 'fallbackUrl', realName: 'FallbackUrl' },
                { name: 'fallbackUrlMethod', realName: 'FallbackUrlMethod' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Body63.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * List of valid shortcode to your Ytel account
         *
         * @return {string}
         */
        Body63.prototype.getShortcode = function () {
            return this.shortcode;
        };
    
        /**
         * Setter for Shortcode
         * 
         * @param {string} value 
         */
        Body63.prototype.setShortcode = function (value) {
            this.shortcode = value;
        };
    
        /**
         * User generated name of the shortcode
         *
         * @return {string|null}
         */
        Body63.prototype.getFriendlyName = function () {
            return this.friendlyName;
        };
    
        /**
         * Setter for FriendlyName
         * 
         * @param {string|null} value 
         */
        Body63.prototype.setFriendlyName = function (value) {
            this.friendlyName = value;
        };
    
        /**
         * URL that can be requested to receive notification when call has ended. A set of default parameters will
         * be sent here once the call is finished.
         *
         * @return {string|null}
         */
        Body63.prototype.getCallbackUrl = function () {
            return this.callbackUrl;
        };
    
        /**
         * Setter for CallbackUrl
         * 
         * @param {string|null} value 
         */
        Body63.prototype.setCallbackUrl = function (value) {
            this.callbackUrl = value;
        };
    
        /**
         * Specifies the HTTP method used to request the required StatusCallBackUrl once call connects.
         *
         * @return {string|null}
         */
        Body63.prototype.getCallbackMethod = function () {
            return this.callbackMethod;
        };
    
        /**
         * Setter for CallbackMethod
         * 
         * @param {string|null} value 
         */
        Body63.prototype.setCallbackMethod = function (value) {
            this.callbackMethod = value;
        };
    
        /**
         * URL used if any errors occur during execution of InboundXML or at initial request of the required Url
         * provided with the POST.
         *
         * @return {string|null}
         */
        Body63.prototype.getFallbackUrl = function () {
            return this.fallbackUrl;
        };
    
        /**
         * Setter for FallbackUrl
         * 
         * @param {string|null} value 
         */
        Body63.prototype.setFallbackUrl = function (value) {
            this.fallbackUrl = value;
        };
    
        /**
         * Specifies the HTTP method used to request the required FallbackUrl once call connects.
         *
         * @return {string|null}
         */
        Body63.prototype.getFallbackUrlMethod = function () {
            return this.fallbackUrlMethod;
        };
    
        /**
         * Setter for FallbackUrlMethod
         * 
         * @param {string|null} value 
         */
        Body63.prototype.setFallbackUrlMethod = function (value) {
            this.fallbackUrlMethod = value;
        };
    
        return Body63;
    }

}(angular));
