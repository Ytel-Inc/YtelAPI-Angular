/**
 * YtelAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Body52
 *
 * @constructor
 */
angular.module('YtelAPILib')
    .factory('Body52', ['BaseModel', Body52Model]);

    function Body52Model(BaseModel) {
        var Body52 = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.shortcode = this.getValue(obj.shortcode);
            this.to = this.getValue(obj.to);
            this.body = this.getValue(obj.body);
            this.method = this.getValue(obj.method);
            this.messagestatuscallback = this.getValue(obj.messagestatuscallback);
        };

        Body52.prototype = new BaseModel();
        Body52.prototype.constructor = Body52;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Body52.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'shortcode', realName: 'shortcode' },
                { name: 'to', realName: 'to' },
                { name: 'body', realName: 'body' },
                { name: 'method', realName: 'method' },
                { name: 'messagestatuscallback', realName: 'messagestatuscallback' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Body52.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * Your dedicated shortcode
         *
         * @return {int}
         */
        Body52.prototype.getShortcode = function () {
            return this.shortcode;
        };
    
        /**
         * Setter for Shortcode
         * 
         * @param {int} value 
         */
        Body52.prototype.setShortcode = function (value) {
            this.shortcode = value;
        };
    
        /**
         * The number to send your SMS to
         *
         * @return {double}
         */
        Body52.prototype.getTo = function () {
            return this.to;
        };
    
        /**
         * Setter for To
         * 
         * @param {double} value 
         */
        Body52.prototype.setTo = function (value) {
            this.to = value;
        };
    
        /**
         * The body of your message
         *
         * @return {string}
         */
        Body52.prototype.getBody = function () {
            return this.body;
        };
    
        /**
         * Setter for Body
         * 
         * @param {string} value 
         */
        Body52.prototype.setBody = function (value) {
            this.body = value;
        };
    
        /**
         * Specifies the HTTP method used to request the required URL once the Short Code message is sent.GET or
         * POST
         *
         * @return {string|null}
         */
        Body52.prototype.getMethod = function () {
            return this.method;
        };
    
        /**
         * Setter for Method
         * 
         * @param {string|null} value 
         */
        Body52.prototype.setMethod = function (value) {
            this.method = value;
        };
    
        /**
         * URL that can be requested to receive notification when Short Code message was sent.
         *
         * @return {string|null}
         */
        Body52.prototype.getMessagestatuscallback = function () {
            return this.messagestatuscallback;
        };
    
        /**
         * Setter for Messagestatuscallback
         * 
         * @param {string|null} value 
         */
        Body52.prototype.setMessagestatuscallback = function (value) {
            this.messagestatuscallback = value;
        };
    
        return Body52;
    }

}(angular));
