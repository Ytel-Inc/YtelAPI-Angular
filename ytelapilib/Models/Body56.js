/**
 * YtelAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Body56
 *
 * @constructor
 */
angular.module('YtelAPILib')
    .factory('Body56', ['BaseModel', Body56Model]);

    function Body56Model(BaseModel) {
        var Body56 = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.conferenceSid = this.getValue(obj.conferenceSid);
        };

        Body56.prototype = new BaseModel();
        Body56.prototype.constructor = Body56;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Body56.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'conferenceSid', realName: 'ConferenceSid' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Body56.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * The unique identifier for a conference object.
         *
         * @return {string}
         */
        Body56.prototype.getConferenceSid = function () {
            return this.conferenceSid;
        };
    
        /**
         * Setter for ConferenceSid
         * 
         * @param {string} value 
         */
        Body56.prototype.setConferenceSid = function (value) {
            this.conferenceSid = value;
        };
    
        return Body56;
    }

}(angular));
