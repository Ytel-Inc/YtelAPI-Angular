/**
 * YtelAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Body43
 *
 * @constructor
 */
angular.module('YtelAPILib')
    .factory('Body43', ['BaseModel', Body43Model]);

    function Body43Model(BaseModel) {
        var Body43 = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.from = this.getValue(obj.from);
            this.rVMCallerId = this.getValue(obj.rVMCallerId);
            this.to = this.getValue(obj.to);
            this.voiceMailURL = this.getValue(obj.voiceMailURL);
            this.method = this.getValue(obj.method);
            this.statusCallBackUrl = this.getValue(obj.statusCallBackUrl);
            this.statsCallBackMethod = this.getValue(obj.statsCallBackMethod);
        };

        Body43.prototype = new BaseModel();
        Body43.prototype.constructor = Body43;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Body43.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'from', realName: 'From' },
                { name: 'rVMCallerId', realName: 'RVMCallerId' },
                { name: 'to', realName: 'To' },
                { name: 'voiceMailURL', realName: 'VoiceMailURL' },
                { name: 'method', realName: 'Method' },
                { name: 'statusCallBackUrl', realName: 'StatusCallBackUrl' },
                { name: 'statsCallBackMethod', realName: 'StatsCallBackMethod' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Body43.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * A valid Ytel Voice enabled number (E.164 format) that will be initiating the phone call.
         *
         * @return {string}
         */
        Body43.prototype.getFrom = function () {
            return this.from;
        };
    
        /**
         * Setter for From
         * 
         * @param {string} value 
         */
        Body43.prototype.setFrom = function (value) {
            this.from = value;
        };
    
        /**
         * A required secondary Caller ID for RVM to work.
         *
         * @return {string}
         */
        Body43.prototype.getRVMCallerId = function () {
            return this.rVMCallerId;
        };
    
        /**
         * Setter for RVMCallerId
         * 
         * @param {string} value 
         */
        Body43.prototype.setRVMCallerId = function (value) {
            this.rVMCallerId = value;
        };
    
        /**
         * A valid number (E.164 format) that will receive the phone call.
         *
         * @return {string}
         */
        Body43.prototype.getTo = function () {
            return this.to;
        };
    
        /**
         * Setter for To
         * 
         * @param {string} value 
         */
        Body43.prototype.setTo = function (value) {
            this.to = value;
        };
    
        /**
         * The URL requested once the RVM connects. A set of default parameters will be sent here.
         *
         * @return {string}
         */
        Body43.prototype.getVoiceMailURL = function () {
            return this.voiceMailURL;
        };
    
        /**
         * Setter for VoiceMailURL
         * 
         * @param {string} value 
         */
        Body43.prototype.setVoiceMailURL = function (value) {
            this.voiceMailURL = value;
        };
    
        /**
         * Specifies the HTTP method used to request the required URL once call connects.
         *
         * @return {string|null}
         */
        Body43.prototype.getMethod = function () {
            return this.method;
        };
    
        /**
         * Setter for Method
         * 
         * @param {string|null} value 
         */
        Body43.prototype.setMethod = function (value) {
            this.method = value;
        };
    
        /**
         * URL that can be requested to receive notification when call has ended. A set of default parameters will
         * be sent here once the call is finished.
         *
         * @return {string|null}
         */
        Body43.prototype.getStatusCallBackUrl = function () {
            return this.statusCallBackUrl;
        };
    
        /**
         * Setter for StatusCallBackUrl
         * 
         * @param {string|null} value 
         */
        Body43.prototype.setStatusCallBackUrl = function (value) {
            this.statusCallBackUrl = value;
        };
    
        /**
         * Specifies the HTTP method used to request the required StatusCallBackUrl once call connects.
         *
         * @return {string|null}
         */
        Body43.prototype.getStatsCallBackMethod = function () {
            return this.statsCallBackMethod;
        };
    
        /**
         * Setter for StatsCallBackMethod
         * 
         * @param {string|null} value 
         */
        Body43.prototype.setStatsCallBackMethod = function (value) {
            this.statsCallBackMethod = value;
        };
    
        return Body43;
    }

}(angular));
